version: '3.9'

services:
  crackhash-manager:
    env_file:
      - dev.env
    build: ./Manager/
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo1:
        condition: service_healthy
    networks:
      - crackhash
    ports:
      - '10010:80'
    restart: on-failure

  crackhash-worker-1:
    env_file:
      - dev.env
    build: ./Worker/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - crackhash
    restart: on-failure

  rabbitmq:
    image: 'rabbitmq:3.13.0-management-alpine'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBIT_VHOST}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - crackhash
    restart: on-failure
    ports:
      - '5672:5672'
      - '15672:15672'

  mongo1:
    container_name: mongo1
    image: mongo:7.0.7-rc2
    volumes:
      - ~/mongors/data1:/data/db
      - ./rs-init.sh:/scripts/rs-init.sh
    networks:
      - crackhash
    links:
      - mongo2
      - mongo3
    restart: always
    ports:
      - '27017:27017'
    command: [ "mongod", "--bind_ip_all", "--replSet", "dbrs"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 20s
      retries: 20

  mongo2:
    container_name: mongo2
    image: mongo:7.0.7-rc2
    volumes:
      - ~/mongors/data2:/data/db
    networks:
      - crackhash
    restart: always
    ports:
      - '27018:27017'
    command: [ "mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo3:
    container_name: mongo3
    image: mongo:7.0.7-rc2
    volumes:
      - ~/mongors/data3:/data/db
    networks:
      - crackhash
    restart: always
    ports:
      - '27019:27017'
    command: [ "mongod", "--bind_ip_all", "--replSet", "dbrs" ]

networks:
  crackhash:
    driver: bridge

